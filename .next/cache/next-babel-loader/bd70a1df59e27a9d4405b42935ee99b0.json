{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* pages/index.js */\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport Layout from '../components/Layout';\nimport ChoosePersona from '../components/ChoosePersona';\nimport NearbyFriends from '../components/NearbyFriends';\nimport Map from '../components/Map';\n\nclass IndexPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"regionFiltered\", people => this.nearby.updatePeople(people));\n\n    _defineProperty(this, \"state\", {\n      id: null,\n      people: []\n    });\n\n    _defineProperty(this, \"endConnection\", () => {\n      this.pusher.disconnect();\n      axios.post(`/offline/${this.state.id}`);\n    });\n\n    _defineProperty(this, \"personaSelected\", id => {\n      this.setState({\n        id\n      });\n      axios.post(`/online/${id}`);\n    });\n  }\n\n  componentWillMount() {\n    this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n      cluster: process.env.PUSHER_APP_CLUSTER,\n      encrypted: true\n    });\n    this.channel = this.pusher.subscribe('map-geofencing');\n  }\n\n  componentDidMount() {\n    axios.get('/people').then(({\n      data\n    }) => {\n      const {\n        people = []\n      } = data;\n      this.setState({\n        people\n      });\n    });\n    window.onbeforeunload = this.endConnection;\n  }\n\n  componentWillUnmount() {\n    this.endConnection();\n  }\n\n  render() {\n    const {\n      id,\n      people\n    } = this.state;\n    const person = people.find(person => person.id === id) || {};\n    const peopleOffline = people.filter(person => !person.online);\n    return __jsx(Layout, {\n      pageTitle: \"Realtime Geofencing\"\n    }, __jsx(\"main\", {\n      className: \"container-fluid position-absolute h-100 bg-light\"\n    }, id ? __jsx(\"div\", {\n      className: \"row position-absolute w-100 h-100\"\n    }, __jsx(\"section\", {\n      className: \"col-md-9 px-0 border-right border-gray position-relative h-100\"\n    }, __jsx(Map, {\n      person: person,\n      radius: 1000,\n      people: people,\n      channel: this.channel,\n      onRegionFiltered: this.regionFiltered\n    })), __jsx(\"section\", {\n      className: \"col-md-3 position-relative d-flex flex-wrap h-100 align-items-start align-content-between bg-white px-0\"\n    }, __jsx(NearbyFriends, {\n      ref: elem => this.nearby = elem,\n      person: person\n    }))) : __jsx(ChoosePersona, {\n      count: 5,\n      people: people,\n      onSelected: this.personaSelected\n    })));\n  }\n\n}\n\n;\nexport default (() => __jsx(IndexPage, null));","map":{"version":3,"sources":["/home/ubuntu/environment/cikoo-geof/pages/index.js"],"names":["React","Component","Fragment","axios","Pusher","Layout","ChoosePersona","NearbyFriends","Map","IndexPage","people","nearby","updatePeople","id","pusher","disconnect","post","state","setState","componentWillMount","process","env","PUSHER_APP_KEY","cluster","PUSHER_APP_CLUSTER","encrypted","channel","subscribe","componentDidMount","get","then","data","window","onbeforeunload","endConnection","componentWillUnmount","render","person","find","peopleOffline","filter","online","regionFiltered","elem","personaSelected"],"mappings":"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","sourcesContent":["/* pages/index.js */\n\n    import React, { Component, Fragment } from 'react';\n    import axios from 'axios';\n    import Pusher from 'pusher-js';\n    import Layout from '../components/Layout';\n    import ChoosePersona from '../components/ChoosePersona'\n    import NearbyFriends from '../components/NearbyFriends';\n    import Map from '../components/Map';\n\n    class IndexPage extends Component {\n      \n      regionFiltered = people => this.nearby.updatePeople(people)\n\n      state = { id: null, people: [] }\n\n      endConnection = () => {\n        this.pusher.disconnect();\n        axios.post(`/offline/${this.state.id}`);\n      }\n\n      componentWillMount() {\n        this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n          cluster: process.env.PUSHER_APP_CLUSTER,\n          encrypted: true\n        });\n\n        this.channel = this.pusher.subscribe('map-geofencing');\n      }\n\n      componentDidMount() {\n        axios.get('/people').then(({ data }) => {\n          const { people = [] } = data;\n          this.setState({ people });\n        });\n\n        window.onbeforeunload = this.endConnection;\n      }\n\n      componentWillUnmount() {\n        this.endConnection();\n      }\n      \n      \n      personaSelected = id => {\n        this.setState({ id });\n        axios.post(`/online/${id}`);\n      }\n\n      render() {\n\n        const { id, people } = this.state;\n        const person = people.find(person => person.id === id) || {};\n        const peopleOffline = people.filter(person => !person.online);\n\n       return (\n          <Layout pageTitle=\"Realtime Geofencing\">\n            <main className=\"container-fluid position-absolute h-100 bg-light\">\n              {\n                id ? <div className=\"row position-absolute w-100 h-100\">\n\n                  <section className=\"col-md-9 px-0 border-right border-gray position-relative h-100\">\n                    <Map person={person} radius={1000} people={people} channel={this.channel} onRegionFiltered={this.regionFiltered} />\n                  </section>\n\n                  <section className=\"col-md-3 position-relative d-flex flex-wrap h-100 align-items-start align-content-between bg-white px-0\">\n                    <NearbyFriends ref={elem => this.nearby = elem} person={person} />\n                  </section>\n\n                </div>\n                : <ChoosePersona count={5} people={people} onSelected={this.personaSelected} />\n              }\n            </main>\n          </Layout>\n        );\n\n      }\n\n    };\n\n    export default () => <IndexPage />"]},"metadata":{},"sourceType":"module"}