{"ast":null,"code":"var __jsx = React.createElement;\n\n/* components/ChoosePersona.js */\nimport React from 'react';\n\nvar ChoosePersona = function ChoosePersona(props) {\n  var _props$people = props.people,\n      people = _props$people === void 0 ? [] : _props$people,\n      _props$count = props.count,\n      count = _props$count === void 0 ? 3 : _props$count,\n      _props$onSelected = props.onSelected,\n      onSelected = _props$onSelected === void 0 ? function (f) {\n    return f;\n  } : _props$onSelected;\n  var nameBadgeStyles = {\n    fontSize: '0.8rem',\n    height: 40,\n    borderRadius: 20,\n    cursor: 'pointer'\n  };\n\n  var choosePersona = function choosePersona(id) {\n    return function (evt) {\n      return onSelected(id);\n    };\n  };\n\n  var renderPeople = function renderPeople(people) {\n    return people.map(function (index) {\n      var _people$index = people[index],\n          id = _people$index.id,\n          name = _people$index.name;\n      var className = 'd-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mx-1 my-2';\n      return __jsx(\"span\", {\n        key: index,\n        className: className,\n        style: nameBadgeStyles,\n        title: name,\n        onClick: choosePersona(id)\n      }, name);\n    });\n  };\n\n  var randomPeople = function randomPeople(count) {\n    return function (people) {\n      var selected = [];\n      var i = 0;\n      count = Math.max(0, Math.min(count, people.length));\n\n      while (i < count) {\n        var index = Math.floor(Math.random() * people.length);\n        if (selected.includes(index)) continue;\n        ++i && selected.push(index);\n      }\n\n      return selected.map(function (index) {\n        var _people$index2 = people[index],\n            id = _people$index2.id,\n            name = _people$index2.name;\n        var className = 'd-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mx-1 my-2';\n        return __jsx(\"span\", {\n          key: index,\n          className: className,\n          style: nameBadgeStyles,\n          title: name,\n          onClick: choosePersona(id)\n        }, name);\n      });\n    };\n  };\n\n  return __jsx(\"div\", {\n    className: \"w-100 h-100 px-3 pb-5 d-flex flex-wrap align-items-center align-content-center justify-content-center\"\n  }, __jsx(\"span\", {\n    className: \"h3 text-dark text-center py-3 w-100 font-weight-bold\"\n  }, \"Friends\"), renderPeople(people));\n};\n\nexport default ChoosePersona;","map":{"version":3,"sources":["/home/ubuntu/environment/cikoo-geof/components/ChoosePersona.js"],"names":["React","ChoosePersona","props","people","count","onSelected","f","nameBadgeStyles","fontSize","height","borderRadius","cursor","choosePersona","id","evt","renderPeople","map","index","name","className","randomPeople","selected","i","Math","max","min","length","floor","random","includes","push"],"mappings":";;AAAC;AAEG,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAAA,sBAE2BA,KAF3B,CAErBC,MAFqB;AAAA,MAErBA,MAFqB,8BAEZ,EAFY;AAAA,qBAE2BD,KAF3B,CAERE,KAFQ;AAAA,MAERA,KAFQ,6BAEA,CAFA;AAAA,0BAE2BF,KAF3B,CAEGG,UAFH;AAAA,MAEGA,UAFH,kCAEgB,UAAAC,CAAC;AAAA,WAAIA,CAAJ;AAAA,GAFjB;AAI7B,MAAMC,eAAe,GAAG;AACtBC,IAAAA,QAAQ,EAAE,QADY;AAEtBC,IAAAA,MAAM,EAAE,EAFc;AAGtBC,IAAAA,YAAY,EAAE,EAHQ;AAItBC,IAAAA,MAAM,EAAE;AAJc,GAAxB;;AAOA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,EAAE;AAAA,WAAI,UAAAC,GAAG;AAAA,aAAIT,UAAU,CAACQ,EAAD,CAAd;AAAA,KAAP;AAAA,GAAxB;;AAGA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAAAZ,MAAM,EAAG;AAC5B,WAAOA,MAAM,CAACa,GAAP,CAAW,UAAAC,KAAK,EAAI;AAAA,0BACJd,MAAM,CAACc,KAAD,CADF;AAAA,UACjBJ,EADiB,iBACjBA,EADiB;AAAA,UACbK,IADa,iBACbA,IADa;AAEzB,UAAMC,SAAS,GAAG,oGAAlB;AACA,aAAO;AAAM,QAAA,GAAG,EAAEF,KAAX;AAAkB,QAAA,SAAS,EAAEE,SAA7B;AAAwC,QAAA,KAAK,EAAEZ,eAA/C;AAAgE,QAAA,KAAK,EAAEW,IAAvE;AAA6E,QAAA,OAAO,EAAGN,aAAa,CAACC,EAAD;AAApG,SAA4GK,IAA5G,CAAP;AACD,KAJM,CAAP;AAKD,GAND;;AAUA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAAAhB,KAAK;AAAA,WAAI,UAAAD,MAAM,EAAI;AAEtC,UAAMkB,QAAQ,GAAG,EAAjB;AACA,UAAIC,CAAC,GAAG,CAAR;AAEAlB,MAAAA,KAAK,GAAGmB,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACE,GAAL,CAASrB,KAAT,EAAgBD,MAAM,CAACuB,MAAvB,CAAZ,CAAR;;AAEA,aAAOJ,CAAC,GAAGlB,KAAX,EAAkB;AAChB,YAAMa,KAAK,GAAGM,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACK,MAAL,KAAgBzB,MAAM,CAACuB,MAAlC,CAAd;AACA,YAAIL,QAAQ,CAACQ,QAAT,CAAkBZ,KAAlB,CAAJ,EAA8B;AAC9B,UAAEK,CAAF,IAAOD,QAAQ,CAACS,IAAT,CAAcb,KAAd,CAAP;AACD;;AAED,aAAOI,QAAQ,CAACL,GAAT,CAAa,UAAAC,KAAK,EAAI;AAAA,6BACNd,MAAM,CAACc,KAAD,CADA;AAAA,YACnBJ,EADmB,kBACnBA,EADmB;AAAA,YACfK,IADe,kBACfA,IADe;AAE3B,YAAMC,SAAS,GAAG,oGAAlB;AAEA,eAAO;AAAM,UAAA,GAAG,EAAEF,KAAX;AAAkB,UAAA,SAAS,EAAEE,SAA7B;AAAwC,UAAA,KAAK,EAAEZ,eAA/C;AAAgE,UAAA,KAAK,EAAEW,IAAvE;AAA6E,UAAA,OAAO,EAAGN,aAAa,CAACC,EAAD;AAApG,WAA4GK,IAA5G,CAAP;AACD,OALM,CAAP;AAOD,KApByB;AAAA,GAA1B;;AAsBA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAM,IAAA,SAAS,EAAC;AAAhB,eADF,EAEIH,YAAY,CAACZ,MAAD,CAFhB,CADF;AAMD,CApDD;;AAsDA,eAAeF,aAAf","sourcesContent":[" /* components/ChoosePersona.js */\n\n    import React from 'react';\n\n    const ChoosePersona = props => {\n\n      const { people = [], count = 3, onSelected = f => f } = props;\n\n      const nameBadgeStyles = {\n        fontSize: '0.8rem',\n        height: 40,\n        borderRadius: 20,\n        cursor: 'pointer'\n      };\n\n      const choosePersona = id => evt => onSelected(id);\n      \n      \n      const renderPeople = people =>{\n        return people.map(index => {\n          const { id, name } = people[index];\n          const className = 'd-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mx-1 my-2';\n          return <span key={index} className={className} style={nameBadgeStyles} title={name} onClick={ choosePersona(id) }>{name}</span>\n        });\n      }\n      \n      \n\n      const randomPeople = count => people => {\n\n        const selected = [];\n        let i = 0;\n\n        count = Math.max(0, Math.min(count, people.length));\n\n        while (i < count) {\n          const index = Math.floor(Math.random() * people.length);\n          if (selected.includes(index)) continue;\n          ++i && selected.push(index);\n        }\n\n        return selected.map(index => {\n          const { id, name } = people[index];\n          const className = 'd-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mx-1 my-2';\n\n          return <span key={index} className={className} style={nameBadgeStyles} title={name} onClick={ choosePersona(id) }>{name}</span>\n        });\n\n      };\n\n      return (\n        <div className=\"w-100 h-100 px-3 pb-5 d-flex flex-wrap align-items-center align-content-center justify-content-center\">\n          <span className=\"h3 text-dark text-center py-3 w-100 font-weight-bold\">Friends</span>\n          { renderPeople(people) }\n        </div>\n      );\n    };\n\n    export default ChoosePersona;"]},"metadata":{},"sourceType":"module"}