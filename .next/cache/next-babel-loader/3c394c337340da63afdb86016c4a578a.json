{"ast":null,"code":"var __jsx = React.createElement;\n\n/* components/ChoosePersona.js */\nimport React from 'react';\n\nconst ChoosePersona = props => {\n  const {\n    people = [],\n    count = 3,\n    onSelected = f => f\n  } = props;\n  const nameBadgeStyles = {\n    fontSize: '0.8rem',\n    height: 40,\n    borderRadius: 20,\n    cursor: 'pointer'\n  };\n\n  const choosePersona = id => evt => onSelected(id);\n\n  const renderPeople = people => {\n    console.log(people);\n    return people.map(index => {\n      const {\n        id,\n        name\n      } = people[index];\n      const className = 'd-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mx-1 my-2';\n      return __jsx(\"span\", {\n        key: index,\n        className: className,\n        style: nameBadgeStyles,\n        title: name,\n        onClick: choosePersona(id)\n      }, name);\n    });\n  };\n\n  const randomPeople = count => people => {\n    console.log(people);\n    const selected = [];\n    let i = 0;\n    count = Math.max(0, Math.min(count, people.length));\n\n    while (i < count) {\n      const index = Math.floor(Math.random() * people.length);\n      if (selected.includes(index)) continue;\n      ++i && selected.push(index);\n    }\n\n    return selected.map(index => {\n      const {\n        id,\n        name\n      } = people[index];\n      const className = 'd-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mx-1 my-2';\n      return __jsx(\"span\", {\n        key: index,\n        className: className,\n        style: nameBadgeStyles,\n        title: name,\n        onClick: choosePersona(id)\n      }, name);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"w-100 h-100 px-3 pb-5 d-flex flex-wrap align-items-center align-content-center justify-content-center\"\n  }, __jsx(\"span\", {\n    className: \"h3 text-dark text-center py-3 w-100 font-weight-bold\"\n  }, \"Friends\"), randomPeople(count)(people));\n};\n\nexport default ChoosePersona;","map":{"version":3,"sources":["/home/ubuntu/environment/cikoo-geof/components/ChoosePersona.js"],"names":["React","ChoosePersona","props","people","count","onSelected","f","nameBadgeStyles","fontSize","height","borderRadius","cursor","choosePersona","id","evt","renderPeople","console","log","map","index","name","className","randomPeople","selected","i","Math","max","min","length","floor","random","includes","push"],"mappings":";;AAAC;AAEG,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAE7B,QAAM;AAAEC,IAAAA,MAAM,GAAG,EAAX;AAAeC,IAAAA,KAAK,GAAG,CAAvB;AAA0BC,IAAAA,UAAU,GAAGC,CAAC,IAAIA;AAA5C,MAAkDJ,KAAxD;AAEA,QAAMK,eAAe,GAAG;AACtBC,IAAAA,QAAQ,EAAE,QADY;AAEtBC,IAAAA,MAAM,EAAE,EAFc;AAGtBC,IAAAA,YAAY,EAAE,EAHQ;AAItBC,IAAAA,MAAM,EAAE;AAJc,GAAxB;;AAOA,QAAMC,aAAa,GAAGC,EAAE,IAAIC,GAAG,IAAIT,UAAU,CAACQ,EAAD,CAA7C;;AAGA,QAAME,YAAY,GAAGZ,MAAM,IAAG;AAC5Ba,IAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AACA,WAAOA,MAAM,CAACe,GAAP,CAAWC,KAAK,IAAI;AACzB,YAAM;AAAEN,QAAAA,EAAF;AAAMO,QAAAA;AAAN,UAAejB,MAAM,CAACgB,KAAD,CAA3B;AACA,YAAME,SAAS,GAAG,oGAAlB;AACA,aAAO;AAAM,QAAA,GAAG,EAAEF,KAAX;AAAkB,QAAA,SAAS,EAAEE,SAA7B;AAAwC,QAAA,KAAK,EAAEd,eAA/C;AAAgE,QAAA,KAAK,EAAEa,IAAvE;AAA6E,QAAA,OAAO,EAAGR,aAAa,CAACC,EAAD;AAApG,SAA4GO,IAA5G,CAAP;AACD,KAJM,CAAP;AAKD,GAPD;;AAWA,QAAME,YAAY,GAAGlB,KAAK,IAAID,MAAM,IAAI;AAEtCa,IAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AAEA,UAAMoB,QAAQ,GAAG,EAAjB;AACA,QAAIC,CAAC,GAAG,CAAR;AAEApB,IAAAA,KAAK,GAAGqB,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACE,GAAL,CAASvB,KAAT,EAAgBD,MAAM,CAACyB,MAAvB,CAAZ,CAAR;;AAEA,WAAOJ,CAAC,GAAGpB,KAAX,EAAkB;AAChB,YAAMe,KAAK,GAAGM,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACK,MAAL,KAAgB3B,MAAM,CAACyB,MAAlC,CAAd;AACA,UAAIL,QAAQ,CAACQ,QAAT,CAAkBZ,KAAlB,CAAJ,EAA8B;AAC9B,QAAEK,CAAF,IAAOD,QAAQ,CAACS,IAAT,CAAcb,KAAd,CAAP;AACD;;AAED,WAAOI,QAAQ,CAACL,GAAT,CAAaC,KAAK,IAAI;AAC3B,YAAM;AAAEN,QAAAA,EAAF;AAAMO,QAAAA;AAAN,UAAejB,MAAM,CAACgB,KAAD,CAA3B;AACA,YAAME,SAAS,GAAG,oGAAlB;AAEA,aAAO;AAAM,QAAA,GAAG,EAAEF,KAAX;AAAkB,QAAA,SAAS,EAAEE,SAA7B;AAAwC,QAAA,KAAK,EAAEd,eAA/C;AAAgE,QAAA,KAAK,EAAEa,IAAvE;AAA6E,QAAA,OAAO,EAAGR,aAAa,CAACC,EAAD;AAApG,SAA4GO,IAA5G,CAAP;AACD,KALM,CAAP;AAOD,GAtBD;;AAwBA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAM,IAAA,SAAS,EAAC;AAAhB,eADF,EAEIE,YAAY,CAAClB,KAAD,CAAZ,CAAoBD,MAApB,CAFJ,CADF;AAMD,CAvDD;;AAyDA,eAAeF,aAAf","sourcesContent":[" /* components/ChoosePersona.js */\n\n    import React from 'react';\n\n    const ChoosePersona = props => {\n\n      const { people = [], count = 3, onSelected = f => f } = props;\n\n      const nameBadgeStyles = {\n        fontSize: '0.8rem',\n        height: 40,\n        borderRadius: 20,\n        cursor: 'pointer'\n      };\n\n      const choosePersona = id => evt => onSelected(id);\n      \n      \n      const renderPeople = people =>{\n        console.log(people)\n        return people.map(index => {\n          const { id, name } = people[index];\n          const className = 'd-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mx-1 my-2';\n          return <span key={index} className={className} style={nameBadgeStyles} title={name} onClick={ choosePersona(id) }>{name}</span>\n        });\n      }\n      \n      \n\n      const randomPeople = count => people => {\n        \n        console.log(people)\n\n        const selected = [];\n        let i = 0;\n\n        count = Math.max(0, Math.min(count, people.length));\n\n        while (i < count) {\n          const index = Math.floor(Math.random() * people.length);\n          if (selected.includes(index)) continue;\n          ++i && selected.push(index);\n        }\n\n        return selected.map(index => {\n          const { id, name } = people[index];\n          const className = 'd-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mx-1 my-2';\n\n          return <span key={index} className={className} style={nameBadgeStyles} title={name} onClick={ choosePersona(id) }>{name}</span>\n        });\n\n      };\n\n      return (\n        <div className=\"w-100 h-100 px-3 pb-5 d-flex flex-wrap align-items-center align-content-center justify-content-center\">\n          <span className=\"h3 text-dark text-center py-3 w-100 font-weight-bold\">Friends</span>\n          { randomPeople(count)(people) }\n        </div>\n      );\n    };\n\n    export default ChoosePersona;"]},"metadata":{},"sourceType":"module"}