{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/ChoosePersona.js","webpack:///./components/Layout.js","webpack:///./components/Map.js","webpack:///./components/MapContainer.js","webpack:///./components/NearbyFriends.js","webpack:///./components/PersonMarker.js","webpack:///./components/UserMarker.js","webpack:///./pages/index.js","webpack:///external \"axios\"","webpack:///external \"next/head\"","webpack:///external \"pusher-js\"","webpack:///external \"react\"","webpack:///external \"react-google-maps\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n"," /* components/ChoosePersona.js */\n\n    import React from 'react';\n\n    const ChoosePersona = props => {\n\n      const { people = [], count = 3, onSelected = f => f } = props;\n\n      const nameBadgeStyles = {\n        fontSize: '0.8rem',\n        height: 40,\n        borderRadius: 20,\n        cursor: 'pointer'\n      };\n\n      const choosePersona = id => evt => onSelected(id);\n      \n      \n      const renderPeople = people =>{\n        console.log(people)\n        return people.map(index => {\n          const { id, name } = people[index];\n          const className = 'd-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mx-1 my-2';\n          return <span key={index} className={className} style={nameBadgeStyles} title={name} onClick={ choosePersona(id) }>{name}</span>\n        });\n      }\n      \n      \n\n      const randomPeople = count => people => {\n        \n        console.log(JSON.stringify(people))\n\n        const selected = [];\n        let i = 0;\n\n        count = Math.max(0, Math.min(count, people.length));\n\n        while (i < count) {\n          const index = Math.floor(Math.random() * people.length);\n          if (selected.includes(index)) continue;\n          ++i && selected.push(index);\n        }\n\n        return selected.map(index => {\n          const { id, name } = people[index];\n          const className = 'd-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mx-1 my-2';\n\n          return <span key={index} className={className} style={nameBadgeStyles} title={name} onClick={ choosePersona(id) }>{name}</span>\n        });\n\n      };\n\n      return (\n        <div className=\"w-100 h-100 px-3 pb-5 d-flex flex-wrap align-items-center align-content-center justify-content-center\">\n          <span className=\"h3 text-dark text-center py-3 w-100 font-weight-bold\">Friends</span>\n          { randomPeople(count)(people) }\n        </div>\n      );\n    };\n\n    export default ChoosePersona;","/* components/Layout.js */\n\n    import React, { Fragment } from 'react';\n    import Head from 'next/head';\n\n    const Layout = props => (\n      <Fragment>\n        <Head>\n          <meta charSet=\"utf-8\" />\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\n          <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossOrigin=\"anonymous\" />\n          <title>{props.pageTitle || 'Cikoo GeoFence'}</title>\n        </Head>\n        {props.children}\n      </Fragment>\n    );\n\n    export default Layout;","/* components/Map.js */\n\n    import React, { Fragment, Component } from 'react';\n    import MapContainer from './MapContainer';\n\n    const API_KEY = process.env.GMAPS_API_KEY;\n    const MAP_URL = `https://maps.googleapis.com/maps/api/js?key=${API_KEY}&v=3.exp&libraries=geometry`;\n\n    class Map extends Component {\n\n      render() {\n        const containerStyles = {\n          height: '100%',\n          width: '100%',\n          position: 'relative'\n        };\n\n        return <MapContainer\n          googleMapURL={MAP_URL}\n          loadingElement={<div style={containerStyles} />}\n          containerElement={<div style={containerStyles} />}\n          mapElement={<div style={containerStyles} />}\n          {...this.props}\n        />\n      }\n\n    };\n\n    export default Map;"," /* components/MapContainer.js */\n\n    import axios from 'axios';\n    import React, { Fragment, Component } from 'react';\n    import { withGoogleMap, withScriptjs, GoogleMap } from 'react-google-maps';\n\n    import UserMarker from './UserMarker';\n    import PersonMarker from './PersonMarker';\n\n    class MapContainer extends Component {\n        \n     /*global google,myPos*/\n     \n     analyzeRegion = (position, radius) => people => {\n        const { onRegionFiltered = f => f } = this.props;\n        const withinRegion = this.withinRegion(position, radius);\n\n        const mappedPeople = people.map(person => {\n          const { position } = person || {};\n          const within = withinRegion(position);\n          return { ...person, within };\n        });\n\n        onRegionFiltered(mappedPeople);\n      }\n\n      componentDidMount() {\n\n        const { person: { id, position }, radius, people = [], channel = null ,me={ me }} = this.props;\n        const mapContext = this.map.context['__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED'];\n        const setMapCenter = mapContext.setCenter.bind(mapContext);\n        \n        console.log(\"Me\"+me);\n\n        let { lat, lng } = position;\n\n        channel && channel.bind('transit', ({ person = {}, people }) => {\n          const { id: $id, position: $position } = person;\n          const isUser = id === $id;\n          const center = isUser ? $position : position;\n\n          isUser && setMapCenter(center);\n          this.analyzeRegion(center, radius)(people);\n        });\n\n        this.positionUpdate = setInterval(() => {\n          lat = lat + Math.random() * 0.001;\n          lng = lng + Math.random() * 0.001;\n\n          axios.post(`/transit/${id}`, { lat, lng });\n        }, 10000);\n\n        this.analyzeRegion(position, radius)(people);\n\n      }\n\n      componentWillUnmount() {\n        clearInterval(this.positionUpdate);\n      }\n\n\n      withinRegion = (position, radius) => {\n        const to = new google.maps.LatLng(position.lat, position.lng);\n        const distance = google.maps.geometry.spherical.computeDistanceBetween;\n        return point => {\n          const from = new google.maps.LatLng(point.lat, point.lng);\n          return distance(from, to) <= radius;\n        }\n      }\n\n      render() {\n        const { person: { id, position }, radius, people, channel } = this.props;\n\n        return (\n          <GoogleMap ref={elem => this.map = elem} zoom={14} center={position}>\n            <Fragment>\n              { people.map((person, index) => {\n\n                const props = { key: index, radius, person, channel };\n                const withinRegion = point => (position, radius) => this.withinRegion(position, radius)(point);\n\n                return (person.id === id)\n                  ? <UserMarker {...props} />\n                  : <PersonMarker user={this.props.person} withinRegion={withinRegion} {...props} />\n\n              }) }\n            </Fragment>\n          </GoogleMap>\n        );\n      }\n\n    };\n\n    export default withScriptjs(withGoogleMap(MapContainer));","/* components/NearbyFriends.js */\n\n    import React, { Component, Fragment } from 'react';\n\n    const BLACK_MARKER = 'https://i.imgur.com/8dOrls4.png?2';\n    const GREEN_MARKER = 'https://i.imgur.com/9v6uW8U.png';\n\n    class NearbyFriends extends Component {\n\n      state = { people: [] }\n      \n\n      updatePeople = people => this.setState({ people })\n      \n      \n      \n      render() {\n        const { people } = this.state;\n        const { person: { name, id } } = this.props;\n\n        const nameBadgeStyles = {\n          fontSize: '0.8rem',\n          height: 40,\n          borderRadius: 20,\n          cursor: 'pointer'\n        };\n\n        const showPeople = (filterFn, marker) => {\n          return <Fragment>\n            { people.filter(filterFn).map((person, index) => {\n\n              if (person.id === id) return null;\n\n              return (\n                <div key={index} className=\"d-flex border-bottom border-gray w-100 px-4 py-3 font-weight-bold text-secondary align-items-center\">\n\n                  <div className=\"pl-2\" style={{ width: 30, height: 30 }}>\n                    <img src={marker} className=\"img-fluid\" alt=\"marker\" />\n                  </div>\n\n                  <span className=\"pl-3\">{person.name}</span>\n\n                </div>\n              );\n\n            }) }\n          </Fragment>\n        };\n\n        return id && <Fragment>\n\n          <div className=\"border-bottom border-gray w-100 px-2 d-flex align-items-center bg-white justify-content-between\" style={{ height: 90 }}>\n            <span className=\"h4 text-dark mb-0 mx-4 font-weight-bold\">Nearby Friends</span>\n            <span className=\"d-flex align-items-center text-center text-white bg-primary font-weight-bold py-2 px-4 mx-4\" style={nameBadgeStyles} title={name}>{name}</span>\n          </div>\n\n          <div className=\"w-100 d-flex flex-wrap align-items-start align-content-start position-relative\" style={{ height: 'calc(100% - 90px)', overflowY: 'auto' }}>\n            { showPeople(person => person.within, GREEN_MARKER) }\n            { showPeople(person => !person.within, BLACK_MARKER) }\n          </div>\n\n        </Fragment>\n      }\n    };\n\n    export default NearbyFriends;","/* components/PersonMarker.js */\n\n    import React, { Component } from 'react';\n    import { Marker } from 'react-google-maps';\n\n    const BLACK_MARKER = 'https://i.imgur.com/8dOrls4.png?2';\n    const GREEN_MARKER = 'https://i.imgur.com/9v6uW8U.png';\n\n    class PersonMarker extends Component {\n        \n     /*global google*/\n\n      constructor(props) {\n        super(props);\n\n        const {\n          user: { id: userID, position: userPosition },\n          person: { id = null, position = null },\n          channel = null\n        } = this.props;\n\n        this.id = id;\n        this.userID = userID;\n        this.channel = channel;\n\n        this.state = { position, userPosition };\n      }\n\n      componentDidMount() {\n        this.channel && this.channel.bind('transit', ({ person = {} }) => {\n          const { id, position } = person;\n          (id === this.id) && this.setState({ position });\n          (id === this.userID) && this.setState({ userPosition: position });\n        });\n      }\n\n      render() {\n        const { position, userPosition } = this.state;\n        const { person: { name }, radius, withinRegion = f => f } = this.props;\n\n        const within = !!(withinRegion(position)(userPosition, radius));\n\n        const MARKER_SIZE = new google.maps.Size(25, 35);\n        const MARKER_ICON = within ? GREEN_MARKER : BLACK_MARKER;\n\n        return <Marker position={position} title={name} options={{ icon: { url: MARKER_ICON, scaledSize: MARKER_SIZE } }} />\n      }\n\n    };\n\n    export default PersonMarker;","import React, { Fragment, Component } from 'react';\n    import { Marker, Circle } from 'react-google-maps';\n\n    class UserMarker extends Component {\n        \n      /*global google*/    \n\n      constructor(props) {\n        super(props);\n        const { person: { id = null, position = null }, channel = null } = this.props;\n\n        this.id = id;\n        this.channel = channel;\n        this.state = { position };\n      }\n\n      componentDidMount() {\n        this.channel && this.channel.bind('transit', ({ person = {} }) => {\n          const { id, position } = person;\n          (id === this.id) && this.setState({ position });\n        });\n      }\n\n      render() {\n\n        const { radius } = this.props;\n        const { position } = this.state;\n        const regionOptions = { fillOpacity: 0.1, strokeWidth: 1, strokeOpacity: 0.2 };\n\n        const MARKER_SIZE = new google.maps.Size(50, 70);\n        const MARKER_ICON = 'https://i.imgur.com/Rhv5xQh.png';\n\n        return <Fragment>\n          <Marker position={position} title=\"You\" options={{ icon: { url: MARKER_ICON, scaledSize: MARKER_SIZE } }} />\n          <Circle center={position} radius={radius} options={regionOptions} />\n        </Fragment>\n\n      }\n    };\n\n    export default UserMarker;","/* pages/index.js */\n\n    import React, { Component, Fragment } from 'react';\n    import axios from 'axios';\n    import Pusher from 'pusher-js';\n    import Layout from '../components/Layout';\n    import ChoosePersona from '../components/ChoosePersona'\n    import NearbyFriends from '../components/NearbyFriends';\n    import Map from '../components/Map';\n\n    class IndexPage extends Component {\n      \n      /*global navigator*/\n      \n      regionFiltered = people => this.nearby.updatePeople(people)\n\n      state = { id: null, people: [],me:null }\n\n      endConnection = () => {\n        this.pusher.disconnect();\n        axios.post(`/offline/${this.state.id}`);\n      }\n\n      componentWillMount() {\n        this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n          cluster: process.env.PUSHER_APP_CLUSTER,\n          encrypted: true\n        });\n\n        this.channel = this.pusher.subscribe('map-geofencing');\n      }\n\n      componentDidMount() {\n        console.log(\"get my location\")\n        //get my current location\n        if ('geolocation' in navigator) {\n          \n          navigator.geolocation.getCurrentPosition(function(position) {\n          const myLocation =   { lat: position.coords.latitude, lng: position.coords.longitude };\n          console.log(\"My Location:\"+myLocation);\n          this.state.me = myLocation;   \n          \n        });  \n       }\n        \n        \n        \n        axios.get('/people').then(({ data }) => {\n          const { people = [] } = data;\n          this.setState({ people });\n        });\n\n        window.onbeforeunload = this.endConnection;\n      }\n\n      componentWillUnmount() {\n        this.endConnection();\n      }\n      \n      \n      personaSelected = id => {\n        this.setState({ id });\n        axios.post(`/online/${id}`);\n      }\n\n      render() {\n\n        const { id, people } = this.state;\n        const person = people.find(person => person.id === id) || {};\n       \n       // const peopleOffline = people.filter(person => !person.online);\n\n       return (\n          <Layout pageTitle=\"Realtime Geofencing\">\n            <main className=\"container-fluid position-absolute h-100 bg-light\">\n              {\n                id ? <div className=\"row position-absolute w-100 h-100\">\n\n                  <section className=\"col-md-9 px-0 border-right border-gray position-relative h-100\">\n                    <Map person={person} radius={1000} people={people} channel={this.channel} onRegionFiltered={this.regionFiltered} me={this.state.me} />\n                  </section>\n\n                  <section className=\"col-md-3 position-relative d-flex flex-wrap h-100 align-items-start align-content-between bg-white px-0\">\n                    <NearbyFriends ref={elem => this.nearby = elem} person={person} />\n                  </section>\n\n                </div>\n                : <ChoosePersona count={5} people={people} onSelected={this.personaSelected} />\n              }\n            </main>\n          </Layout>\n        );\n\n      }\n\n    };\n\n    export default () => <IndexPage />","module.exports = require(\"axios\");","module.exports = require(\"next/head\");","module.exports = require(\"pusher-js\");","module.exports = require(\"react\");","module.exports = require(\"react-google-maps\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACxFA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC7DA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;;;;ACjBA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AAOA;AACA;AAjBA;AACA;AAiBA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAK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","sourceRoot":""}